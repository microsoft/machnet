trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  timezone: 'America/Los_Angeles'
  rdma_core: '/root/rdma-core'
  rte_sdk: '/root/dpdk'

steps:
- script: |
    sudo ln -snf /usr/share/zoneinfo/$(timezone) /etc/localtime
    echo $(timezone) > /etc/timezone
    echo 'APT::Install-Suggests "0";' | sudo tee -a /etc/apt/apt.conf.d/00-docker
    echo 'APT::Install-Recommends "0";' | sudo tee -a /etc/apt/apt.conf.d/00-docker
    sudo apt-get update
    sudo apt-get install --no-install-recommends -y git build-essential cmake meson pkg-config libudev-dev libnl-3-dev libnl-route-3-dev python3-dev python3-docutils python3-pyelftools libnuma-dev ca-certificates autoconf libgflags-dev libgflags2.2 libhugetlbfs-dev pciutils libunwind-dev uuid-dev nlohmann-json3-dev
    sudo apt-get --purge -y remove rdma-core librdmacm1 ibverbs-providers libibverbs-dev libibverbs1
    sudo rm -rf /var/lib/apt/lists/*
  displayName: 'Set timezone and Install dependencies'

- script: |
    cd ~
    git clone --depth=1 --recurse-submodules https://github.com/google/cityhash.git
    cd cityhash
    ./configure --enable-sse4.2
    make all check CXXFLAGS="-O3 -msse4.2"
  displayName: 'Build cityhash from source'

- script: |
    cd ~
    git clone -b 'stable-v40' --single-branch --depth 1 https://github.com/linux-rdma/rdma-core.git $(rdma_core)
    cd $(rdma_core)
    mkdir build
    cd build
    cmake -GNinja -DNO_PYVERBS=1 -DNO_MAN_PAGES=1 ../
    ninja install
  displayName: 'Build rdma-core'

- script: |
    cd ~
    git clone --depth 1 --branch 'v21.11' https://github.com/DPDK/dpdk.git $(rte_sdk)
    cd $(rte_sdk)
    meson build -Dexamples='' -Dplatform=generic -Denable_kmods=false -Dtests=false -Ddisable_drivers='raw/*,crypto/*,baseband/*,dma/*'
    cd build/
    DESTDIR=$(rte_sdk)/build/install ninja install
    rm -rf $(rte_sdk)/app $(rte_sdk)/drivers $(rte_sdk)/.git $(rte_sdk)/build/app
  displayName: 'Build DPDK'

- checkout: self
  path: 'machnet'
  submodules: recursive

- script: |
    cd ~/machnet
    mkdir build
    cd build
    cmake -DCMAKE_BUILD_TYPE=Release -GNinja ../
    ninja
  displayName: 'Build Machnet'